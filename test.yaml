apiVersion: v1
kind: Service
metadata:
  name: asandbox-1-mdb-clust
  labels:
    mariadb: asandbox-1
    entrypoint.mariadb: asandbox-1
spec:
  ports:
  - name: mariadb
    port: 3306
    targetPort: 3306
  clusterIP: None
  selector:
    mariadb: asandbox-1
---
# a StatefulSet for the columnstore UMs cluster
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: asandbox-1-mdb-cs-single-module
  labels:
    mariadb: asandbox-1
    columnstore.single.mariadb: asandbox-1
spec:
  selector:
    matchLabels:
      mariadb: asandbox-1
      columnstore.single.mariadb: asandbox-1
  serviceName: asandbox-1-mdb-clust
  replicas: 1
  template:
    metadata:
      labels:
        mariadb: asandbox-1
        columnstore.single.mariadb: asandbox-1
    spec:
      ## runs an initialization script to prepare the correct startup configuration
      name: init-columnstore
        image: nastybuff/cs:1.2
        command:
          - bash
          - /mnt/config-template/init-configurations.sh
          - columnstore
        env:
          - name: BACKUP_CLAIM_NAME
            value: 
          - name: CLUSTER_TOPOLOGY
            value: columnstore
          - name: MARIADB_CS_NODE
            value: UM
        volumeMounts:
          - mountPath: /mnt/secrets
            name: mariadb-secrets-vol
            readOnly: true
          - mountPath: /docker-entrypoint-initdb.d
            name: mariadb-entrypoint-vol
          - mountPath: /mnt/config-template
            name: mariadb-configtemplate-vol
          - mountPath: /mnt/config-map
            name: mariadb-config-vol
      containers:
#Columnstore Module
      - name: columnstore-module
        image: nastybuff/cs:1.2
        # start a mariadb instance
        command:
        - bash
        - /mnt/config-map/start-mariadb-instance.sh
        # command: ["ls"]
        # args: ["mnt/config-map"]
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "Y"
        - name: CLUSTER_TOPOLOGY
          value: columnstore
        - name: MARIADB_CS_NODE
          value: UM
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mariadb-entrypoint-vol
          mountPath: /docker-entrypoint-initdb.d
        - name: mariadb-config-vol
          mountPath: /mnt/config-map
        # a permanent volume for data storage
        - name: data
          mountPath: /usr/local/mariadb/columnstore/mysql/db
          subPath: db
      restartPolicy: Always
      volumes:
      - name: mariadb-entrypoint-vol
        emptyDir: {}
      - name: mariadb-config-vol
        emptyDir: {}
      - name: mariadb-configtemplate-vol
        configMap:
          name: asandbox-1-mariadb-config
      - name: mariadb-secrets-vol
        secret:
          secretName: asandbox-1-mariadb-secret
  # ensures persistent volumes end up on the same pod
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        mariadb: asandbox-1
        storage.mariadb: asandbox-1
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 256Mi

---
# Copyright (C) 2018, MariaDB Corporation
#
# Defines a state store server that maintains (through heartbeat calls
# from each pod in a MariaDB cluster on a regular scheduled interval):
#   * a list of MaxScale instances
#   * a list of MariaDB server instances
#   * a reference to a single active MaxScale instance
#   * a reference to a single Master instance
#
# The number of replicas should be exactly 1.

kind: Service
apiVersion: v1
metadata:
  name: asandbox-1-mdb-state
  labels:
    mariadb: asandbox-1
    state-store.mariadb: asandbox-1
    
spec:
  selector:
    state-store.mariadb: asandbox-1
  ports:
  - protocol: TCP
    port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: asandbox-1-mdb-state
  labels:
    mariadb: asandbox-1
    state-store.mariadb: asandbox-1
    
spec:
  replicas: 1
  selector:
    matchLabels:
      state-store.mariadb: asandbox-1
  template:
    metadata:
      labels:
        mariadb: asandbox-1
        state-store.mariadb: asandbox-1
    spec:
      containers:
      - image: mariadb/statestore:0.0.3
        command: ["/bin/sh"]
        args: ["-c", "cd /root; node ./server.js"]
        imagePullPolicy: IfNotPresent
        name: state-store
        ports:
        - containerPort: 80
        volumeMounts:
          - name: mariadb-configtemplate-vol
            mountPath: /mnt/config-template
      volumes:
      - name: mariadb-configtemplate-vol
        configMap:
          name: asandbox-1-mariadb-config
      restartPolicy: Always