#!/bin/sh

MAX_TRIES=36 # 3 minutes
if [ ! -z "$CS_WAIT_ATTEMPTS" ]; then
    MAX_TRIES=$CS_WAIT_ATTEMPTS
fi

# if argument is -d enable debug output
if [ $# -gt 0 ] && [ "$1" == "-d" ]; then
    CS_DEBUG=1
fi

ATTEMPT=1
# wait for mcsadmin getSystemStatus to show active
STATUS=$(/usr/local/mariadb/columnstore/bin/mcsadmin getSystemStatus | tail -n +9 | grep System | grep -v "System and Module statuses")
if [ ! -z $CS_DEBUG ]; then
    echo "wait_for_columnstore_active($ATTEMPT/$MAX_TRIES): getSystemStatus: $STATUS"
fi
echo "$STATUS" | grep -q 'System.*ACTIVE'
while [ 1 -eq $? ] && [ $ATTEMPT -le $MAX_TRIES ]; do
    sleep 5
    ATTEMPT=$(($ATTEMPT+1))
    STATUS=$(/usr/local/mariadb/columnstore/bin/mcsadmin getSystemStatus | tail -n +9 | grep System | grep -v "System and Module statuses")
    if [ ! -z $CS_DEBUG ]; then
        echo "wait_for_columnstore_active($ATTEMPT/$MAX_TRIES): getSystemStatus: $STATUS"
    fi
    echo "$STATUS" | grep -q 'System.*ACTIVE'
done

if [ $ATTEMPT -ge $MAX_TRIES ]; then
    echo "ERROR: ColumnStore did not start after $MAX_TRIES attempts"
    exit 1
fi

# during install the system status can be active but the cs system catalog
# is still being created, so wait for this to complete. This will currently
# fail if run on a um2 or greater but almost all scripts should only be
# run on um1 and let replication clone to other ums
if [ -f "/usr/local/mariadb/columnstore/mysql/bin/mysql" ]; then
    echo "Waiting for system catalog to be fully created"
    ATTEMPT=1
    STATUS=$(/usr/local/mariadb/columnstore/mysql/bin/mysql -u root test -e "drop table if exists installtest; create table installtest(i tinyint) engine=columnstore;" 2>&1)
    while [ 1 -eq $? ] && [ $ATTEMPT -le $MAX_TRIES ]; do
        if [ ! -z $CS_DEBUG ]; then
            echo "wait_for_columnstore_active($ATTEMPT/$MAX_TRIES): create table test error: $STATUS"
        fi
        echo "$STATUS" | grep -q "DML and DDL statements for Columnstore tables can only be run from the replication master."
        if [ 0 -eq $? ]; then
            echo "Not um1 so assuming system ready"
            exit 0
        fi
        sleep 2
        ATTEMPT=$(($ATTEMPT+1))
        STATUS=$(/usr/local/mariadb/columnstore/mysql/bin/mysql -u root test -e "drop table if exists installtest; create table installtest(i tinyint) engine=columnstore;" 2>&1)
    done
    /usr/local/mariadb/columnstore/mysql/bin/mysql -u root test -e "drop table if exists installtest;"
    if [ $ATTEMPT -ge $MAX_TRIES ]; then
        echo "ERROR: ColumnStore not ready for use after $MAX_TRIES attempts"
        exit 1
    else
        echo "System ready"
    fi
fi
exit 0
