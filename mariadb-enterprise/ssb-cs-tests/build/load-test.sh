#!/bin/bash
#set -eu -o pipefail
set -x
##################
#Load Test
#Loads the data from the flat files generated by dbgen.
#Time taken for the data load is observed.
#cpimport was used to load data
#nohup load_data_mdb.sh &

#1  Move data from ssb pod to cs um node
# 1.1 Move extract files from ssb pod to nfs server
# 1.2 Move extracts from nfs server to um 
#3 Execute tests DDLs/create test schemas and tables
#4 Import extract files in CS / load test tables with data
##################

#K8s resource names
ssbPod="$1-$2"
umNode="$1-mdb-cs-um-module-0"

#ssb pod extracts path
ssbPodPath="/root/ssb"

podNfsMnt="/nfs-volume"
extDir="ssb"

nfsSSBdir="$podNfsMnt/$extDir"

#um extracts path
nfsMnt="/backup-storage"
nfsMntPath="$nfsMnt/$extDir"

#1Move data from ssb pod to cs um node
#1.1 Move extract files from ssb pod to nfs mnt dir

#check if ssb pod is ready
while [[ !("$(kubectl get po "$ssbPod" -o 'jsonpath={.status.conditions[?(@.type=="Ready")].status}')" == 'True') ]]; do
		echo -n "."
		sleep 1 
done

dircheck=`kubectl exec "$ssbPod" -- ls "$podNfsMnt" | grep "$extDir" | wc -l | xargs`
echo $dircheck
if [[ "$dircheck">"0" ]]; then
    kubectl exec "$ssbPod" -- rm -rf "$nfsSSBdir" &
    wait
fi
kubectl exec "$ssbPod" -- cp -a "$ssbPodPath" "$podNfsMnt"

#1.2 Move extracts from nfs server to um 
dircheck=`kubectl exec -it "$umNode"  -- ls / | grep "$extDir" | wc -l | xargs`

if [[ "$dircheck" > "0" ]]; then
  echo 1
  kubectl exec "$umNode" -c columnstore-module-um -- rm -rf "/$extDir" &
  wait
fi

kubectl exec "$umNode" -c columnstore-module-um  -- cp -a "$nfsMntPath" /

#3 Execute tests DDLs/create test schemas and tables
kubectl exec -it "$umNode" -- mysql -vvv <  "$extDir/benchmark_scripts/create_table_mdb.sql"

#4 Import extract files in CS / load test tables with data

kubectl exec "$umNode" -- /bin/bash ./ssb/benchmark_scripts/load_data_mdb.sh

exit 0


