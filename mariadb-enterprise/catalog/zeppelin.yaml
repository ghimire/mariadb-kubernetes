apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mdb-zeppelin
  labels:
    mariadb: {{ .Release.Name }}
spec:
  ports:
  - name: zeppelin
    port: 8080
    targetPort: 8080
  selector:
    mariadb: {{ .Release.Name }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mdb-zepp
  mariadb: {{ .Release.Name }}
    {{- if .Values.mariadb.cluster.id }}
    id.mariadb: "{{ .Values.mariadb.cluster.id }}"
    {{- end }}
spec:
  selector:
    matchLabels:
      mariadb: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}-mdb-zeppelin
  replicas: 1
  template:
    metadata:
      labels:
        mariadb: {{ .Release.Name }}
    spec:
      initContainers:
      - name: init-mdb-zeppelin
        image: {{ .Values.mariadb.zeppelin.image }}
        command:
          - bash
          - /mnt/config-template/init-configurations.sh
          - zeppelin
        volumeMounts:
          - mountPath: /mnt/secrets
            name: mariadb-secrets-vol
            readOnly: true
          - mountPath: /docker-entrypoint-initdb.d
            name: mariadb-entrypoint-vol
          - mountPath: /mnt/config-template
            name: mariadb-configtemplate-vol
          - mountPath: /mnt/config-map
            name: mariadb-config-vol
          - name: notebook
            mountPath: /zeppelin/notebook
      containers:
      - image: {{ .Values.mariadb.zeppelin.image }}
        name: mdb-zeppelin
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - name: mariadb-entrypoint-vol
          mountPath: /docker-entrypoint-initdb.d
        - name: mariadb-config-vol
          mountPath: /mnt/config-map
        - name: notebook
          mountPath: /zeppelin/notebook
        restartPolicy: Always
        {{- if or (.Values.mariadb.server.resources.limits.cpu) (.Values.mariadb.server.resources.limits.memory) (.Values.mariadb.server.resources.requests.cpu) (.Values.mariadb.server.resources.requests.memory) }}        
        resources:
        {{- end }}
          {{- if or (.Values.mariadb.server.resources.requests.cpu) (.Values.mariadb.server.resources.requests.memory) }}
          requests:
          {{- end }}
            {{- if .Values.mariadb.server.resources.requests.cpu }}
            cpu: {{ .Values.mariadb.server.resources.requests.cpu }}
            {{- end }}
            {{- if .Values.mariadb.server.resources.requests.memory }}
            memory: {{ .Values.mariadb.server.resources.requests.memory }}
            {{- end }}
          {{- if or (.Values.mariadb.server.resources.limits.cpu) (.Values.mariadb.server.resources.limits.memory) }}
          limits:
          {{- end }}
            {{- if .Values.mariadb.server.resources.limits.cpu }}
            cpu: {{ .Values.mariadb.server.resources.limits.cpu }}
            {{- end }}
            {{- if .Values.mariadb.server.resources.limits.memory }}
            memory: {{ .Values.mariadb.server.resources.limits.memory }}
            {{- end }}        
      volumes:
        - name: mariadb-entrypoint-vol
          emptyDir: {}
        - name: mariadb-config-vol
          emptyDir: {}
        - name: mariadb-configtemplate-vol
          configMap:
            name: {{ .Release.Name }}-mariadb-config
        - name: mariadb-secrets-vol
          secret:
            secretName: {{ .Release.Name }}-mariadb-secret
  volumeClaimTemplates:
  - metadata:
      name: notebook
      labels: 
        mariadb: {{ .Release.Name }}
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi